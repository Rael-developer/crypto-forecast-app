import streamlit as st
import plotly.graph_objects as go
from prophet import Prophet
from crypto_utils import get_price, get_historical_data, get_all_symbols
import pandas as pd

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Previs√£o Cripto", layout="wide")

# T√≠tulo
st.title("üìà Previs√£o de Criptomoedas com IA")

# Sidebar - Configura√ß√µes
st.sidebar.header("‚öôÔ∏è Configura√ß√µes")
moedas = get_all_symbols()
symbol = st.sidebar.selectbox("Escolha a Cripto", moedas, key="select_crypto")
dias = st.sidebar.slider("Dias de Previs√£o", 1, 60, 30, key="forecast_days")

# Exibe pre√ßo atual
st.subheader(f"Pre√ßo Atual de {symbol}")
preco_atual = get_price(symbol)
if preco_atual:
    st.metric(label="Pre√ßo Atual", value=f"${preco_atual:,.2f}")
else:
    st.error("N√£o foi poss√≠vel obter o pre√ßo atual.")

# Obt√©m hist√≥rico
st.subheader(f"Hist√≥rico de {symbol}")
historico = get_historical_data(symbol, days=365)

# Verifica√ß√£o de dados
if historico.empty or len(historico) < 2:
    st.warning(f"Sem dados suficientes para {symbol}. Tente outra moeda.")
    st.stop()

# Gr√°fico hist√≥rico
fig_hist = go.Figure()
fig_hist.add_trace(go.Scatter(x=historico['ds'], y=historico['y'],
                              mode='lines', name='Hist√≥rico', line=dict(color='orange')))
fig_hist.update_layout(title=f"Hist√≥rico de Pre√ßos - {symbol}", xaxis_title="Data", yaxis_title="Pre√ßo (USD)")
st.plotly_chart(fig_hist, use_container_width=True)

# Previs√£o com Prophet
st.subheader("üîÆ Previs√£o para os pr√≥ximos dias")
with st.spinner("Treinando modelo Prophet para previs√£o..."):
    model = Prophet(daily_seasonality=True)
    model.fit(historico)
    future = model.make_future_dataframe(periods=dias)
    forecast = model.predict(future)

# Gr√°fico previs√£o
fig_forecast = go.Figure()
fig_forecast.add_trace(go.Scatter(x=forecast['ds'], y=forecast['yhat'], mode='lines',
                                  name='Previs√£o', line=dict(color='blue')))
fig_forecast.add_trace(go.Scatter(x=historico['ds'], y=historico['y'], mode='markers',
                                  name='Hist√≥rico', marker=dict(color='black', size=5)))
fig_forecast.update_layout(title=f"Previs√£o de {symbol} para {dias} dias", xaxis_title="Data", yaxis_title="Pre√ßo (USD)")
st.plotly_chart(fig_forecast, use_container_width=True)

# Detalhes do forecast
st.subheader("üìä Detalhes da Previs√£o")
st.dataframe(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(dias))
